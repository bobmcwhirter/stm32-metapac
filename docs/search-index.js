var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems","t":[3,11,11,11,3,11,3,11,11,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Peripheral","new","borrow","get","CriticalSection","new","Mutex","new","borrow","Nr","nr","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt"],"q":["bare_metal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A peripheral","Creates a new peripheral","Borrows the peripheral for the duration of a critical …","Returns a pointer to the register block","Critical section token","Creates a critical section token","A “mutex” based on critical sections","Creates a new mutex","Borrows the data for the duration of the critical section","Interrupt number","Returns the number associated with an interrupt","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,2,0,3,3,0,4,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,1],"f":[null,[[["usize",15]]],[[["criticalsection",3]]],[[]],null,[[]],null,[[]],[[["criticalsection",3]]],null,[[],["u8",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]]],"p":[[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"],[8,"Nr"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like …","t":[8,10,10,8,10,10,14,14,14,14],"n":["BitRange","bit_range","set_bit_range","Bit","bit","set_bit","bitfield_fields","bitfield_debug","bitfield_bitrange","bitfield"],"q":["bitfield","","","","","","","","",""],"d":["A trait to get or set ranges of bits.","Get a range of bits.","Set a range of bits.","A trait to get or set a single bit.","Get a single bit.","Set a single bit.","Declares the fields of struct.","Generates a <code>fmt::Debug</code> implementation.","Implements <code>BitRange</code> for a tuple struct (or “newtype”).","Combines <code>bitfield_bitrange</code> and <code>bitfield_fields</code>."],"i":[0,1,1,0,2,2,0,0,0,0],"f":[null,[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],null,null,null,null],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","t":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,11,11,0,3,3,8,10,8,10,5,5,5,0,3,12,5,5,5,5,0,0,3,12,12,12,12,12,12,12,12,12,12,0,3,12,12,12,12,12,12,12,12,12,12,4,13,13,0,3,12,12,12,12,0,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,0,3,12,12,12,12,12,0,3,12,12,12,12,0,3,12,12,0,3,12,12,12,12,12,12,3,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,0,3,12,12,12,12,12,12,12,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,11,4,13,13,13,12,11,4,13,13,13,13,13,13,13,13,0,3,12,12,12,12,4,13,13,0,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,18,11,3,3,18,11,3,18,11,3,18,11,0,8,10,8,10,8,16,10,8,16,10,8,16,10,8,16,10,10,8,16,10,8,16,10,8,10,10,8,16,10,8,16,10,10,8,16,10,10,8,16,10,10,8,16,10,10,10,10,10,0,0,5,5,0,5,0,3,11,11,11,11,11,11,11,11,4,13,13,11,11,4,13,13,11,11,4,13,13,11,11,5,5,0,4,13,13,11,11,5,0,5,5,0,4,13,13,11,11,5,0,5,5,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["asm","bkpt","delay","nop","udf","wfe","wfi","sev","isb","dsb","dmb","semihosting_syscall","bootstrap","bootload","delay","Delay","new","free","interrupt","CriticalSection","Mutex","Nr","nr","InterruptNumber","number","disable","enable","free","itm","Aligned","0","write_all","write_aligned","write_fmt","write_str","peripheral","cbp","RegisterBlock","iciallu","icimvau","dcimvac","dcisw","dccmvau","dccmvac","dccsw","dccimvac","dccisw","bpiall","cpuid","RegisterBlock","base","pfr","dfr","afr","mmfr","isar","clidr","ctr","ccsidr","csselr","CsselrCacheType","DataOrUnified","Instruction","dcb","RegisterBlock","dhcsr","dcrsr","dcrdr","demcr","dwt","RegisterBlock","ctrl","cyccnt","cpicnt","exccnt","sleepcnt","lsucnt","foldcnt","pcsr","c","lar","lsr","Comparator","comp","mask","function","fpb","RegisterBlock","ctrl","remap","comp","lar","lsr","fpu","RegisterBlock","fpccr","fpcar","fpdscr","mvfr","icb","RegisterBlock","ictr","actlr","itm","RegisterBlock","stim","ter","tpr","tcr","lar","lsr","Stim","write_u8","write_u16","write_u32","is_fifo_ready","mpu","RegisterBlock","_type","ctrl","rnr","rbar","rasr","rbar_a1","rasr_a1","rbar_a2","rasr_a2","rbar_a3","rasr_a3","nvic","RegisterBlock","iser","icer","ispr","icpr","iabr","ipr","stir","scb","RegisterBlock","icsr","vtor","aircr","scr","ccr","shpr","shcsr","cfsr","hfsr","dfsr","mmfar","bfar","afsr","cpacr","Exception","NonMaskableInt","HardFault","MemoryManagement","BusFault","UsageFault","SecureFault","SVCall","DebugMonitor","PendSV","SysTick","irqn","VectActive","ThreadMode","Exception","Interrupt","irqn","from","SystemHandler","MemoryManagement","BusFault","UsageFault","SecureFault","SVCall","DebugMonitor","PendSV","SysTick","syst","RegisterBlock","csr","rvr","cvr","calib","SystClkSource","Core","External","tpiu","RegisterBlock","sspsr","cspsr","acpr","sppr","ffcr","lar","lsr","_type","Peripherals","CBP","CPUID","DCB","DWT","FPB","FPU","ICB","ITM","MPU","NVIC","SAU","SCB","SYST","TPIU","take","steal","CBP","PTR","ptr","CPUID","PTR","ptr","DCB","PTR","ptr","DWT","PTR","ptr","FPB","PTR","ptr","FPU","PTR","ptr","ICB","PTR","ptr","ITM","PTR","ptr","MPU","PTR","ptr","NVIC","PTR","ptr","SAU","SCB","PTR","ptr","SYST","PTR","ptr","TPIU","PTR","ptr","prelude","_embedded_hal_blocking_delay_DelayMs","delay_ms","_embedded_hal_blocking_delay_DelayUs","delay_us","_embedded_hal_blocking_i2c_Read","Error","read","_embedded_hal_blocking_i2c_Write","Error","write","_embedded_hal_blocking_i2c_WriteRead","Error","write_read","_embedded_hal_blocking_serial_Write","Error","bwrite_all","bflush","_embedded_hal_blocking_spi_Transfer","Error","transfer","_embedded_hal_blocking_spi_Write","Error","write","_embedded_hal_digital_OutputPin","set_low","set_high","_embedded_hal_serial_Read","Error","read","_embedded_hal_serial_Write","Error","write","flush","_embedded_hal_spi_FullDuplex","Error","read","send","_embedded_hal_timer_CountDown","Time","start","wait","_embedded_hal_PwmPin","Duty","disable","enable","get_duty","get_max_duty","set_duty","register","basepri","read","write","basepri_max","write","control","Control","from_bits","bits","npriv","set_npriv","spsel","set_spsel","fpca","set_fpca","Npriv","Privileged","Unprivileged","is_privileged","is_unprivileged","Spsel","Msp","Psp","is_msp","is_psp","Fpca","Active","NotActive","is_active","is_not_active","read","write","faultmask","Faultmask","Active","Inactive","is_active","is_inactive","read","msp","read","write","primask","Primask","Active","Inactive","is_active","is_inactive","read","psp","read","write","iprint","iprintln","singleton","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","write_str","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","ne","eq","eq","eq","eq","eq","eq","eq","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delay_ms","delay_ms","delay_ms","delay_ms","delay_us","delay_us","delay_us","delay_us","new","new","borrow","iciallu","icimvau","dcimvac","dcisw","dccmvau","dccmvac","dccsw","dccimvac","dccisw","bpiall","select_cache","cache_num_sets_ways","cache_dminline","cache_iminline","enable_trace","disable_trace","is_debugger_attached","enable_cycle_counter","get_cycle_count","unlock","request","mask","unmask","get_priority","is_active","is_enabled","is_pending","pend","set_priority","unpend","vect_active","enable_icache","disable_icache","icache_enabled","invalidate_icache","enable_dcache","disable_dcache","dcache_enabled","clean_dcache","clean_invalidate_dcache","invalidate_dcache_by_address","invalidate_dcache_by_ref","invalidate_dcache_by_slice","clean_dcache_by_address","clean_dcache_by_ref","clean_dcache_by_slice","clean_invalidate_dcache_by_address","set_sleepdeep","clear_sleepdeep","set_sleeponexit","clear_sleeponexit","sys_reset","set_pendsv","is_pendsv_pending","clear_pendsv","set_pendst","is_pendst_pending","clear_pendst","get_priority","set_priority","enable","disable","is_enabled","clear_current","disable_counter","disable_interrupt","enable_counter","enable_interrupt","get_clock_source","get_current","get_reload","get_ticks_per_10ms","has_reference_clock","has_wrapped","is_counter_enabled","is_interrupt_enabled","is_precise","set_clock_source","set_reload"],"q":["cortex_m","cortex_m::asm","","","","","","","","","","","","","cortex_m","cortex_m::delay","","","cortex_m","cortex_m::interrupt","","","","","","","","","cortex_m","cortex_m::itm","","","","","","cortex_m","cortex_m::peripheral","cortex_m::peripheral::cbp","","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::cpuid","","","","","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::dcb","","","","","cortex_m::peripheral","cortex_m::peripheral::dwt","","","","","","","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::fpb","","","","","","cortex_m::peripheral","cortex_m::peripheral::fpu","","","","","cortex_m::peripheral","cortex_m::peripheral::icb","","","cortex_m::peripheral","cortex_m::peripheral::itm","","","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::mpu","","","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::nvic","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::scb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m::peripheral::scb::VectActive","cortex_m::peripheral::scb","","","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::syst","","","","","","","","cortex_m::peripheral","cortex_m::peripheral::tpiu","","","","","","","","","cortex_m::peripheral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m","cortex_m::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m","cortex_m::register","cortex_m::register::basepri","","cortex_m::register","cortex_m::register::basepri_max","cortex_m::register","cortex_m::register::control","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m::register","cortex_m::register::faultmask","","","","","","cortex_m::register","cortex_m::register::msp","","cortex_m::register","cortex_m::register::primask","","","","","","cortex_m::register","cortex_m::register::psp","","cortex_m","","","cortex_m::delay","","","","","","","cortex_m::interrupt","","","","","","","","","","","","","","cortex_m::itm","","","","","","","cortex_m::peripheral::cbp","","","","","","","cortex_m::peripheral::cpuid","","","","","","","","","","","","","","cortex_m::peripheral::dcb","","","","","","","cortex_m::peripheral::dwt","","","","","","","","","","","","","","cortex_m::peripheral::fpb","","","","","","","cortex_m::peripheral::fpu","","","","","","","cortex_m::peripheral::icb","","","","","","","cortex_m::peripheral::itm","","","","","","","","","","","","","","cortex_m::peripheral::mpu","","","","","","","cortex_m::peripheral::nvic","","","","","","","cortex_m::peripheral::scb","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m::peripheral::syst","","","","","","","","","","","","","","cortex_m::peripheral::tpiu","","","","","","","cortex_m::peripheral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m::register::control","","","","","","","","","","","","","","","","","","","","","","","","","","","","cortex_m::register::faultmask","","","","","","","cortex_m::register::primask","","","","","","","cortex_m::prelude","cortex_m::peripheral","","","","","","","","","","","","","","","cortex_m::peripheral::cpuid","cortex_m::peripheral::scb","","","cortex_m::peripheral::syst","cortex_m::register::control","","","","cortex_m::register::faultmask","cortex_m::register::primask","cortex_m::peripheral::cpuid","cortex_m::peripheral::scb","","","","cortex_m::peripheral::syst","cortex_m::register::control","","","cortex_m::register::faultmask","cortex_m::register::primask","cortex_m::peripheral::cpuid","cortex_m::peripheral::scb","","","cortex_m::peripheral::syst","cortex_m::register::control","","","","cortex_m::register::faultmask","cortex_m::register::primask","cortex_m::delay","","","","","","","","cortex_m::interrupt","","","cortex_m::peripheral","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Miscellaneous assembly instructions","Puts the processor in Debug state. Debuggers can pick …","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.","A no-operation. Useful to prevent delay loops from being …","Generate an Undefined Instruction exception.","Wait For Event","Wait For Interrupt","Send Event","Instruction Synchronization Barrier","Data Synchronization Barrier","Data Memory Barrier","Semihosting syscall.","Bootstrap.","Bootload.","A delay driver based on SysTick.","System timer (SysTick) as a delay provider.","Configures the system timer (SysTick) as a delay provider.","Releases the system timer (SysTick) resource.","Interrupts","Critical section token","A “mutex” based on critical sections","Interrupt number","Returns the number associated with an interrupt","Trait for enums of external interrupt numbers.","Return the interrupt number associated with this variant.","Disables all interrupts","Enables all the interrupts","Execute closure <code>f</code> in an interrupt-free context.","Instrumentation Trace Macrocell","A wrapper type that aligns its contents on a 4-Byte …","","Writes <code>buffer</code> to an ITM port.","Writes a 4-byte aligned <code>buffer</code> to an ITM port.","Writes <code>fmt::Arguments</code> to the ITM <code>port</code>","Writes a string to the ITM <code>port</code>","Core peripherals.","Cache and branch predictor maintenance operations","Register block","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","D-cache clean by MVA to PoU","D-cache clean by MVA to PoC","D-cache clean by set-way","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","Branch predictor invalidate all","CPUID","Register block","CPUID base","Processor Feature (not present on Cortex-M0 variants)","Debug Feature (not present on Cortex-M0 variants)","Auxiliary Feature (not present on Cortex-M0 variants)","Memory Model Feature (not present on Cortex-M0 variants)","Instruction Set Attribute (not present on Cortex-M0 …","Cache Level ID (only present on Cortex-M7)","Cache Type (only present on Cortex-M7)","Cache Size ID (only present on Cortex-M7)","Cache Size Selection (only present on Cortex-M7)","Type of cache to select on CSSELR writes.","Select DCache or unified cache","Select ICache","Debug Control Block","Register block","Debug Halting Control and Status","Debug Core Register Selector","Debug Core Register Data","Debug Exception and Monitor Control","Data Watchpoint and Trace unit","Register block","Control","Cycle Count","CPI Count","Exception Overhead Count","Sleep Count","LSU Count","Folded-instruction Count","Program Counter Sample","Comparators","Lock Access","Lock Status","Comparator","Comparator","Comparator Mask","Comparator Function","Flash Patch and Breakpoint unit","Register block","Control","Remap","Comparator","Lock Access","Lock Status","Floating Point Unit","Register block","Floating Point Context Control","Floating Point Context Address","Floating Point Default Status Control","Media and FP Feature","Implementation Control Block","Register block","Interrupt Controller Type Register","Auxiliary Control Register","Instrumentation Trace Macrocell","Register block","Stimulus Port","Trace Enable","Trace Privilege","Trace Control","Lock Access","Lock Status","Stimulus Port","Writes an <code>u8</code> payload into the stimulus port","Writes an <code>u16</code> payload into the stimulus port","Writes an <code>u32</code> payload into the stimulus port","Returns <code>true</code> if the stimulus port is ready to accept more …","Memory Protection Unit","Register block for ARMv7-M","Type","Control","Region Number","Region Base Address","Region Attribute and Size","Alias 1 of RBAR","Alias 1 of RASR","Alias 2 of RBAR","Alias 2 of RASR","Alias 3 of RBAR","Alias 3 of RASR","Nested Vector Interrupt Controller","Register block","Interrupt Set-Enable","Interrupt Clear-Enable","Interrupt Set-Pending","Interrupt Clear-Pending","Interrupt Active Bit (not present on Cortex-M0 variants)","Interrupt Priority","Software Trigger Interrupt","System Control Block","Register block","Interrupt Control and State","Vector Table Offset (not present on Cortex-M0 variants)","Application Interrupt and Reset Control","System Control","Configuration and Control","System Handler Priority (word accessible only on …","System Handler Control and State","Configurable Fault Status (not present on Cortex-M0 …","HardFault Status (not present on Cortex-M0 variants)","Debug Fault Status (not present on Cortex-M0 variants)","MemManage Fault Address (not present on Cortex-M0 …","BusFault Address (not present on Cortex-M0 variants)","Auxiliary Fault Status (not present on Cortex-M0 variants)","Coprocessor Access Control (not present on Cortex-M0 …","Processor core exceptions (internal interrupts)","Non maskable interrupt","Hard fault interrupt","Memory management interrupt (not present on Cortex-M0 …","Bus fault interrupt (not present on Cortex-M0 variants)","Usage fault interrupt (not present on Cortex-M0 variants)","Secure fault interrupt (only on ARMv8-M)","SV call interrupt","Debug monitor interrupt (not present on Cortex-M0 …","Pend SV interrupt","System Tick interrupt","Returns the IRQ number of this <code>Exception</code>","Active exception number","Thread mode","Processor core exception (internal interrupts)","Device specific exception (external interrupts)","Interrupt number. This number is always within half open …","Converts a <code>byte</code> into <code>VectActive</code>","System handlers, exceptions with configurable priority","Memory management interrupt (not present on Cortex-M0 …","Bus fault interrupt (not present on Cortex-M0 variants)","Usage fault interrupt (not present on Cortex-M0 variants)","Secure fault interrupt (only on ARMv8-M)","SV call interrupt","Debug monitor interrupt (not present on Cortex-M0 …","Pend SV interrupt","System Tick interrupt","SysTick: System Timer","Register block","Control and Status","Reload Value","Current Value","Calibration Value","SysTick clock source","Core-provided clock","External reference clock","Trace Port Interface Unit;","Register block","Supported Parallel Port Sizes","Current Parallel Port Size","Asynchronous Clock Prescaler","Selected Pin Control","Formatter and Flush Control","Lock Access","Lock Status","TPIU Type","Core peripherals","Cache and branch predictor maintenance operations. Not …","CPUID","Debug Control Block","Data Watchpoint and Trace unit","Flash Patch and Breakpoint unit. Not available on Armv6-M.","Floating Point Unit.","Implementation Control Block.","Instrumentation Trace Macrocell. Not available on Armv6-M …","Memory Protection Unit","Nested Vector Interrupt Controller","Security Attribution Unit","System Control Block","SysTick: System Timer","Trace Port Interface Unit. Not available on Armv6-M.","Returns all the core peripherals <em>once</em>","Unchecked version of <code>Peripherals::take</code>","Cache and branch predictor maintenance operations","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","CPUID","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Debug Control Block","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Data Watchpoint and Trace unit","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Flash Patch and Breakpoint unit","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Floating Point Unit","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Implementation Control Block.","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Instrumentation Trace Macrocell","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Memory Protection Unit","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Nested Vector Interrupt Controller","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Security Attribution Unit","System Control Block","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","SysTick: System Timer","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Trace Port Interface Unit","Pointer to the register block","Returns a pointer to the register block (to be deprecated …","Prelude","Millisecond delay","Pauses execution for <code>ms</code> milliseconds","Microsecond delay","Pauses execution for <code>us</code> microseconds","Blocking read","Error type","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","Blocking write","Error type","Sends bytes to slave with address <code>addr</code>","Blocking write + read","Error type","Sends bytes to slave with address <code>addr</code> and then reads …","Write half of a serial interface (blocking variant)","The type of error that can occur when writing","Writes a slice, blocking until everything has been written","Block until the serial interface has sent all buffered …","Blocking transfer","Error type","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","Blocking write","Error type","Sends <code>words</code> to the slave, ignoring all the incoming words","Single digital push-pull output pin","Drives the pin low","Drives the pin high","Read half of a serial interface","Read error","Reads a single word from the serial interface","Write half of a serial interface","Write error","Writes a single word to the serial interface","Ensures that none of the previously written words are …","Full duplex (master mode)","An enumeration of SPI errors","Reads the word stored in the shift register","Sends a word to the slave","A count down timer","The unit of time used by this timer","Starts a new count down","Non-blockingly “waits” until the count down finishes","A single PWM channel / pin","Type for the <code>duty</code> methods","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Returns the current duty cycle","Returns the maximum duty cycle value","Sets a new duty cycle","Processor core registers","Base Priority Mask Register","Reads the CPU register","Writes to the CPU register","Base Priority Mask Register (conditional write)","Writes to BASEPRI <em>if</em>","Control register","Control register","Creates a <code>Control</code> value from raw bits.","Returns the contents of the register as raw bits","Thread mode privilege level","Sets the thread mode privilege level value (nPRIV).","Currently active stack pointer","Sets the SPSEL value.","Whether context floating-point is currently active","Sets the FPCA value.","Thread mode privilege level","Privileged","Unprivileged","Is in privileged thread mode?","Is in unprivileged thread mode?","Currently active stack pointer","MSP is the current stack pointer","PSP is the current stack pointer","Is MSP the current stack pointer?","Is PSP the current stack pointer?","Whether context floating-point is currently active","Floating-point context active.","No floating-point context active","Is a floating-point context active?","Is a floating-point context not active?","Reads the CPU register","Writes to the CPU register.","Fault Mask Register","All exceptions are …","Active","Inactive, expect for NMI","All exceptions are active","All exceptions, except for NMI, are inactive","Reads the CPU register","Main Stack Pointer","Reads the CPU register","Writes <code>bits</code> to the CPU register","Priority mask register","All exceptions with configurable priority are …","Active","Inactive","All exceptions with configurable priority are active","All exceptions with configurable priority are inactive","Reads the CPU register","Process Stack Pointer","Reads the CPU register","Writes <code>bits</code> to the CPU register","Macro for sending a formatted string through an ITM …","Macro for sending a formatted string through an ITM …","Macro to create a mutable reference to a statically …reates a critical section token","Creates a new mutex","Borrows the data for the duration of the critical section","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","D-cache clean by MVA to PoU","D-cache clean by MVA to PoC","D-cache clean by set-way","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","Branch predictor invalidate all","Selects the current CCSIDR","Returns the number of sets and ways in the selected cache","Returns log2 of the number of words in the smallest cache …","Returns log2 of the number of words in the smallest cache …","Enables TRACE. This is for example required by the …","Disables TRACE. See <code>DCB::enable_trace()</code> for more details","Is there a debugger attached? (see note)","Enables the cycle counter","Returns the current clock cycle count","Removes the software lock on the DWT","Request an IRQ in software","Disables <code>interrupt</code>","Enables <code>interrupt</code>","Returns the NVIC priority of <code>interrupt</code>","Is <code>interrupt</code> active or pre-empted and stacked","Checks if <code>interrupt</code> is enabled","Checks if <code>interrupt</code> is pending","Forces <code>interrupt</code> into pending state","Sets the “priority” of <code>interrupt</code> to <code>prio</code>","Clears <code>interrupt</code>’s pending state","Returns the active exception number","Enables I-cache if currently disabled.","Disables I-cache if currently enabled.","Returns whether the I-cache is currently enabled.","Invalidates the entire I-cache.","Enables D-cache if currently disabled.","Disables D-cache if currently enabled.","Returns whether the D-cache is currently enabled.","Cleans the entire D-cache.","Cleans and invalidates the entire D-cache.","Invalidates D-cache by address.","Invalidates an object from the D-cache.","Invalidates a slice from the D-cache.","Cleans D-cache by address.","Cleans an object from the D-cache.","Cleans a slice from D-cache.","Cleans and invalidates D-cache by address.","Set the SLEEPDEEP bit in the SCR register","Clear the SLEEPDEEP bit in the SCR register","Set the SLEEPONEXIT bit in the SCR register","Clear the SLEEPONEXIT bit in the SCR register","Initiate a system reset request to reset the MCU","Set the PENDSVSET bit in the ICSR register which will …","Check if PENDSVSET bit in the ICSR register is set …","Set the PENDSVCLR bit in the ICSR register which will …","Set the PENDSTSET bit in the ICSR register which will …","Check if PENDSTSET bit in the ICSR register is set …","Set the PENDSTCLR bit in the ICSR register which will …","Returns the hardware priority of <code>system_handler</code>","Sets the hardware priority of <code>system_handler</code> to <code>prio</code>","Enable the exception","Disable the exception","Check if an exception is enabled","Clears current value to 0","Disables counter","Disables SysTick interrupt","Enables counter","Enables SysTick interrupt","Gets clock source","Gets current value","Gets reload value","Returns the reload value with which the counter would …","Checks if an external reference clock is available","Checks if the counter wrapped (underflowed) since the …","Checks if counter is enabled","Checks if SysTick interrupt is enabled","Checks if the calibration value is precise","Sets clock source","Sets reload value"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,0,7,7,0,0,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,0,0,11,11,11,11,11,0,0,12,12,12,12,0,0,13,13,0,0,14,14,14,14,14,14,0,15,15,15,15,0,0,16,16,16,16,16,16,16,16,16,16,16,0,0,17,17,17,17,17,17,17,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,21,20,0,22,22,22,22,22,22,22,22,0,0,23,23,23,23,0,24,24,0,0,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,0,28,28,0,29,29,0,30,30,0,31,31,0,32,32,0,33,33,0,34,34,0,35,35,0,36,36,0,0,37,37,0,38,38,0,39,39,0,0,40,0,41,0,42,42,0,43,43,0,44,44,0,45,45,45,0,46,46,0,47,47,0,48,48,0,49,49,0,50,50,50,0,51,51,51,0,52,52,52,0,53,53,53,53,53,53,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,0,55,55,55,55,0,56,56,56,56,0,57,57,57,57,0,0,0,0,58,58,58,58,0,0,0,0,0,0,59,59,59,59,0,0,0,0,0,0,0,1,1,1,1,1,1,1,60,60,60,60,60,60,60,61,61,61,61,61,61,61,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,62,62,62,62,62,62,62,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,57,57,57,57,57,57,57,58,58,58,58,58,58,58,59,59,59,59,59,59,59,50,27,28,29,30,31,32,33,34,35,36,37,38,39,33,34,7,19,20,22,24,54,55,56,57,58,59,7,19,20,20,22,24,55,56,57,58,59,7,19,20,22,24,54,55,56,57,58,59,1,1,1,1,1,1,1,1,60,61,61,27,27,27,27,27,27,27,27,27,27,28,28,28,28,29,29,29,30,30,30,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":[null,[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["u32",15]],[[]],[[]],null,null,[[["u32",15],["syst",3]]],[[],["syst",3]],null,null,null,null,[[],["u8",15]],null,[[],["u16",15]],[[]],[[]],[[]],null,null,null,[[["stim",3]]],[[["aligned",3],["stim",3]]],[[["arguments",3],["stim",3]]],[[["str",15],["stim",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]]],[[["u16",15]]],[[["u32",15]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i8",15]],null,null,null,null,null,[[["u8",15]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,null,null,[[]],null,null,[[]],null,null,[[]],null,null,[[]],null,[[]],null,null,[[["u8",15]],["result",4]],null,null,[[["u8",15]],["result",4]],null,null,[[["u8",15]],["result",4]],null,null,[[],["result",4]],[[],["result",4]],null,null,[[],["result",4]],null,null,[[],["result",4]],null,[[]],[[]],null,null,[[],[["error",4],["result",4]]],null,null,[[],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],null,null,[[],[["error",4],["result",4]]],[[],[["error",4],["result",4]]],null,null,[[]],[[],[["result",4],["error",4]]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,[[],["u8",15]],[[["u8",15]]],null,[[["u8",15]]],null,null,[[["u32",15]]],[[],["u32",15]],[[],["npriv",4]],[[["npriv",4]]],[[],["spsel",4]],[[["spsel",4]]],[[],["fpca",4]],[[["fpca",4]]],null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["control",3]],[[["control",3]]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["faultmask",4]],null,[[],["u32",15]],[[["u32",15]]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["primask",4]],null,[[],["u32",15]],[[["u32",15]]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["csselrcachetype",4]],["bool",15]],[[["exception",4]],["bool",15]],[[["vectactive",4]],["bool",15]],[[["vectactive",4]],["bool",15]],[[["systemhandler",4]],["bool",15]],[[["systclksource",4]],["bool",15]],[[["npriv",4]],["bool",15]],[[["spsel",4]],["bool",15]],[[["fpca",4]],["bool",15]],[[["faultmask",4]],["bool",15]],[[["primask",4]],["bool",15]],[[],["csselrcachetype",4]],[[],["exception",4]],[[],["vectactive",4]],[[],["systemhandler",4]],[[],["systclksource",4]],[[],["control",3]],[[],["npriv",4]],[[],["spsel",4]],[[],["fpca",4]],[[],["faultmask",4]],[[],["primask",4]],[[["u32",15]]],[[["i32",15]]],[[["u16",15]]],[[["u8",15]]],[[["u32",15]]],[[["i32",15]]],[[["u16",15]]],[[["u8",15]]],[[],["criticalsection",3]],[[],["mutex",3]],[[["criticalsection",3]]],[[]],[[["u32",15]]],[[["u32",15]]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u16",15]]],[[["u32",15]]],[[["u16",15]]],[[]],[[["csselrcachetype",4],["u8",15]]],[[["csselrcachetype",4],["u8",15]]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["bool",15]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["u8",15]]],[[]],[[],["vectactive",4]],[[]],[[]],[[],["bool",15]],[[]],[[["cpuid",3]]],[[["cpuid",3]]],[[],["bool",15]],[[["cpuid",3]]],[[["cpuid",3]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[["systemhandler",4]],["u8",15]],[[["systemhandler",4],["u8",15]]],[[["exception",4]]],[[["exception",4]]],[[["exception",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["systclksource",4]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["systclksource",4]]],[[["u32",15]]]],"p":[[3,"Delay"],[8,"Nr"],[8,"InterruptNumber"],[3,"Aligned"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"CsselrCacheType"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Comparator"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Stim"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"RegisterBlock"],[3,"Peripherals"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"FPU"],[3,"ICB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_PwmPin"],[3,"Control"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[4,"Faultmask"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"],[3,"SAU"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","t":[0,0,0,8,10,8,10,0,8,16,10,8,16,10,8,16,10,0,0,0,8,8,16,10,10,0,0,8,0,8,8,16,10,8,16,10,0,0,8,10,10,0,8,16,10,10,0,3,11,0,0,0,0,8,16,10,8,16,10,10,0,8,16,10,10,4,13,13,4,13,13,3,12,12,17,17,17,17,0,8,16,10,10,8,8,16,10,0,8,16,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["adc","blocking","delay","DelayMs","delay_ms","DelayUs","delay_us","i2c","Read","Error","read","Write","Error","write","WriteRead","Error","write_read","rng","serial","write","Default","Write","Error","bwrite_all","bflush","spi","transfer","Default","write","Default","Transfer","Error","transfer","Write","Error","write","digital","v1","OutputPin","set_low","set_high","v2","OutputPin","Error","set_low","set_high","v1_compat","OldOutputPin","new","v2_compat","fmt","prelude","serial","Read","Error","read","Write","Error","write","flush","spi","FullDuplex","Error","read","send","Polarity","IdleLow","IdleHigh","Phase","CaptureOnFirstTransition","CaptureOnSecondTransition","Mode","polarity","phase","MODE_0","MODE_1","MODE_2","MODE_3","timer","CountDown","Time","start","wait","Periodic","Cancel","Error","cancel","watchdog","PwmPin","Duty","disable","enable","get_duty","get_max_duty","set_duty","set_low","set_high","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","set_low","set_high","eq","eq","eq","ne","write_str","from","clone","clone","clone"],"q":["embedded_hal","","embedded_hal::blocking","embedded_hal::blocking::delay","","","","embedded_hal::blocking","embedded_hal::blocking::i2c","","","","","","","","","embedded_hal::blocking","","embedded_hal::blocking::serial","embedded_hal::blocking::serial::write","embedded_hal::blocking::serial","","","","embedded_hal::blocking","embedded_hal::blocking::spi","embedded_hal::blocking::spi::transfer","embedded_hal::blocking::spi","embedded_hal::blocking::spi::write","embedded_hal::blocking::spi","","","","","","embedded_hal","embedded_hal::digital","embedded_hal::digital::v1","","","embedded_hal::digital","embedded_hal::digital::v2","","","","embedded_hal::digital","embedded_hal::digital::v1_compat","","embedded_hal::digital","embedded_hal","","","embedded_hal::serial","","","","","","","embedded_hal","embedded_hal::spi","","","","","","","","","","","","","","","","","embedded_hal","embedded_hal::timer","","","","","","","","embedded_hal","","","","","","","","embedded_hal::digital::v1_compat","","","","","","","","","embedded_hal::spi","","","","","","","","","","","","","","","","","","","","","embedded_hal::digital::v1_compat","","embedded_hal::spi","","","","embedded_hal::serial","embedded_hal::digital::v1_compat","embedded_hal::spi","",""],"d":["Analog-digital conversion traits","Blocking API","Delays","Millisecond delay","Pauses execution for <code>ms</code> milliseconds","Microsecond delay","Pauses execution for <code>us</code> microseconds","Blocking I2C API","Blocking read","Error type","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","Blocking write","Error type","Sends bytes to slave with address <code>addr</code>","Blocking write + read","Error type","Sends bytes to slave with address <code>addr</code> and then reads …","Blocking hardware random number generator","Blocking serial API","Blocking serial write","Marker trait to opt into default blocking write …","Write half of a serial interface (blocking variant)","The type of error that can occur when writing","Writes a slice, blocking until everything has been written","Block until the serial interface has sent all buffered …","Blocking SPI API","Blocking transfer","Default implementation of <code>blocking::spi::Transfer<W></code> for …","Blocking write","Default implementation of <code>blocking::spi::Write<W></code> for …","Blocking transfer","Error type","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","Blocking write","Error type","Sends <code>words</code> to the slave, ignoring all the incoming words","Digital I/O","Digital I/O","Single digital push-pull output pin","Drives the pin low","Drives the pin high","Digital I/O","Single digital push-pull output pin","Error type","Drives the pin low","Drives the pin high","v1 compatibility wrappers","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>","v2 compatibility shims","Implementation of <code>core::fmt::Write</code> for the HAL’s …","The prelude is a collection of all the traits in this …","Serial interface","Read half of a serial interface","Read error","Reads a single word from the serial interface","Write half of a serial interface","Write error","Writes a single word to the serial interface","Ensures that none of the previously written words are …","Serial Peripheral Interface","Full duplex (master mode)","An enumeration of SPI errors","Reads the word stored in the shift register","Sends a word to the slave","Clock polarity","Clock signal low when idle","Clock signal high when idle","Clock phase","Data in “captured” on the first clock transition","Data in “captured” on the second clock transition","SPI mode","Clock polarity","Clock phase","Helper for CPOL = 0, CPHA = 0","Helper for CPOL = 0, CPHA = 1","Helper for CPOL = 1, CPHA = 0","Helper for CPOL = 1, CPHA = 1","Timers","A count down timer","The unit of time used by this timer","Starts a new count down","Non-blockingly “waits” until the count down finishes","Marker trait that indicates that a timer is periodic","Trait for cancelable countdowns.","Error returned when a countdown can’t be canceled.","Tries to cancel this countdown.","Traits for interactions with a processors watchdog timer.","A single PWM channel / pin","Type for the <code>duty</code> methods","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Returns the current duty cycle","Returns the maximum duty cycle value","Sets a new duty cycle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,0,2,0,0,3,3,0,4,4,0,5,5,0,0,0,0,0,6,6,6,0,0,0,0,0,0,7,7,0,8,8,0,0,0,9,9,0,0,10,10,10,0,0,11,0,0,0,0,0,12,12,0,13,13,13,0,0,14,14,14,0,15,15,0,16,16,0,17,17,0,0,0,0,0,0,18,18,18,0,0,19,19,0,0,20,20,20,20,20,20,11,11,11,11,11,11,11,11,11,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,11,11,15,16,17,17,13,11,15,16,17],"f":[null,null,null,null,[[]],null,[[]],null,null,null,[[["u8",15]],["result",4]],null,null,[[["u8",15]],["result",4]],null,null,[[["u8",15]],["result",4]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,[[],["result",4]],null,null,[[],["result",4]],null,null,null,[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,[[]],null,null,null,null,null,null,[[],["result",6]],null,null,[[],["result",6]],[[],["result",6]],null,null,null,[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],[["result",6],["void",4]]],null,null,null,[[],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["polarity",4]],["bool",15]],[[["phase",4]],["bool",15]],[[["mode",3]],["bool",15]],[[["mode",3]],["bool",15]],[[["str",15]],["result",6]],[[]],[[],["polarity",4]],[[],["phase",4]],[[],["mode",3]]],"p":[[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteRead"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"OutputPin"],[8,"OutputPin"],[3,"OldOutputPin"],[8,"Read"],[8,"Write"],[8,"FullDuplex"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[8,"CountDown"],[8,"Cancel"],[8,"PwmPin"]]},\
"stm32_metapac":{"doc":"Peripheral access API (generated using svd2rust v0.17.0 …","t":[0,0,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,3,12,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,0,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,11,11,11,11,11,11,11,0,3,3,3,8,8,8,3,11,11,11,11,11,11,0,0,3,12,11,11,11,11,3,12,11,11,3,12,11,11,3,12,11,11,11,11,3,12,11,11,3,12,11,11,11,11,0,3,12,18,18,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,3,12,18,18,18,18,3,12,18,18,3,12,18,18,3,12,11,11,11,11,11,11,0,0,3,12,18,18,18,18,3,12,18,18,3,12,18,18,18,18,3,12,18,18,3,12,18,3,12,18,18,18,3,12,18,18,3,12,18,3,12,18,18,3,12,18,18,3,12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,3,12,11,11,11,11,3,12,11,11,11,11,3,12,11,11,3,12,11,11,3,12,11,11,3,12,11,11,3,12,11,11,3,12,11,11,3,12,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["usart_v1","regs","Cr1","0","ue","set_ue","m","set_m","wake","set_wake","pce","set_pce","ps","set_ps","peie","set_peie","txeie","set_txeie","tcie","set_tcie","rxneie","set_rxneie","idleie","set_idleie","te","set_te","re","set_re","rwu","set_rwu","sbk","set_sbk","Dr","0","dr","set_dr","Brr","0","div_mantissa","set_div_mantissa","div_fraction","set_div_fraction","Sr","0","cts","set_cts","lbd","set_lbd","txe","set_txe","tc","set_tc","rxne","set_rxne","idle","set_idle","ore","set_ore","ne","set_ne","fe","set_fe","pe","set_pe","Cr3","0","ctsie","set_ctsie","ctse","set_ctse","rtse","set_rtse","dmat","set_dmat","dmar","set_dmar","scen","set_scen","nack","set_nack","hdsel","set_hdsel","irlp","set_irlp","iren","set_iren","eie","set_eie","Cr2","0","linen","set_linen","stop","set_stop","clken","set_clken","cpol","set_cpol","cpha","set_cpha","lbcl","set_lbcl","lbdie","set_lbdie","lbdl","set_lbdl","add","set_add","Gtpr","0","gt","set_gt","psc","set_psc","vals","Scen","0","DISABLED","ENABLED","Ue","0","DISABLED","ENABLED","Hdsel","0","FULLDUPLEX","HALFDUPLEX","Wake","0","IDLELINE","ADDRESSMARK","Te","0","DISABLED","ENABLED","Nack","0","DISABLED","ENABLED","Stop","0","STOP1","STOP0P5","STOP2","STOP1P5","Re","0","DISABLED","ENABLED","Peie","0","DISABLED","ENABLED","Rxneie","0","DISABLED","ENABLED","Ctse","0","DISABLED","ENABLED","Tcie","0","DISABLED","ENABLED","Rwu","0","ACTIVE","MUTE","Ps","0","EVEN","ODD","Pce","0","DISABLED","ENABLED","Cpha","0","FIRST","SECOND","Sbk","0","NOBREAK","BREAK","Cpol","0","LOW","HIGH","Rtse","0","DISABLED","ENABLED","Idleie","0","DISABLED","ENABLED","Dmat","0","DISABLED","ENABLED","M","0","M8","M9","Dmar","0","DISABLED","ENABLED","Ctsie","0","DISABLED","ENABLED","Eie","0","DISABLED","ENABLED","Lbdie","0","DISABLED","ENABLED","Txeie","0","DISABLED","ENABLED","Lbdl","0","LBDL10","LBDL11","Iren","0","DISABLED","ENABLED","Clken","0","DISABLED","ENABLED","Irlp","0","NORMAL","LOWPOWER","Linen","0","DISABLED","ENABLED","Usart1","0","sr","dr","brr","cr1","cr2","cr3","gtpr","generic","RW","R","W","Access","Read","Write","Reg","from_ptr","ptr","read","write_value","write","modify","gpio_v1","regs","Bsrr","0","bs","set_bs","br","set_br","Brr","0","br","set_br","Idr","0","idr","set_idr","Cr","0","cnf","set_cnf","mode","set_mode","Odr","0","odr","set_odr","Lckr","0","lckk","set_lckk","lck","set_lck","vals","Cnf","0","PUSHPULL","OPENDRAIN","ALTPUSHPULL","ALTOPENDRAIN","Idr","0","HIGH","LOW","Bsw","0","NOACTION","SET","Lckk","0","NOTACTIVE","ACTIVE","Lck","0","UNLOCKED","LOCKED","Mode","0","INPUT","OUTPUT","OUTPUT2","OUTPUT50","Odr","0","HIGH","LOW","Brw","0","NOACTION","RESET","Gpioa","0","cr","idr","odr","bsrr","brr","lckr","gpio_v2","vals","Moder","0","INPUT","OUTPUT","ALTERNATE","ANALOG","Lck","0","UNLOCKED","LOCKED","Ospeedr","0","LOWSPEED","MEDIUMSPEED","HIGHSPEED","VERYHIGHSPEED","Ot","0","PUSHPULL","OPENDRAIN","Brw","0","RESET","Pupdr","0","FLOATING","PULLUP","PULLDOWN","Odr","0","HIGH","LOW","Bsw","0","SET","Lckk","0","NOTACTIVE","ACTIVE","Idr","0","HIGH","LOW","Afr","0","AF0","AF1","AF2","AF3","AF4","AF5","AF6","AF7","AF8","AF9","AF10","AF11","AF12","AF13","AF14","AF15","regs","Lckr","0","lckk","set_lckk","lck","set_lck","Bsrr","0","br","set_br","bs","set_bs","Moder","0","moder","set_moder","Idr","0","idr","set_idr","Otyper","0","ot","set_ot","Odr","0","odr","set_odr","Pupdr","0","pupdr","set_pupdr","Afr","0","afr","set_afr","Ospeedr","0","ospeedr","set_ospeedr","Gpio","0","moder","otyper","ospeedr","pupdr","idr","odr","bsrr","lckr","afr","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default"],"q":["stm32_metapac","stm32_metapac::usart_v1","stm32_metapac::usart_v1::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::usart_v1","stm32_metapac::usart_v1::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::usart_v1","","","","","","","","","stm32_metapac","stm32_metapac::generic","","","","","","","","","","","","","stm32_metapac","stm32_metapac::gpio_v1","stm32_metapac::gpio_v1::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v1","stm32_metapac::gpio_v1::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v1","","","","","","","","stm32_metapac","stm32_metapac::gpio_v2","stm32_metapac::gpio_v2::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v2","stm32_metapac::gpio_v2::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v2","","","","","","","","","","","stm32_metapac::usart_v1::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::usart_v1::valsstm32_metapac::usart_v1","","","","","","","stm32_metapac::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v1::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v1::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v1","","","","","","","stm32_metapac::gpio_v2::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v2::regs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::gpio_v2","","","","","","","stm32_metapac::usart_v1","stm32_metapac::usart_v1::regs","","","","","","","stm32_metapac::usart_v1::vals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stm32_metapac::generic","","","","stm32_metapac::gpio_v1","stm32_metapac::gpio_v1::regs","","","","","","stm32_metapac::gpio_v1::vals","","","","","","","","stm32_metapac::gpio_v2","stm32_metapac::gpio_v2::vals","","","","","","","","","","","stm32_metapac::gpio_v2::regs","","","","","","","","","stm32_metapac::usart_v1::regs","","","","","","","stm32_metapac::gpio_v1::regs","","","","","","stm32_metapac::gpio_v2::regs","","","","","","","",""],"d":["","","Control register 1","","USART enable","USART enable","Word length","Word length","Wakeup method","Wakeup method","Parity control enable","Parity control enable","Parity selection","Parity selection","PE interrupt enable","PE interrupt enable","TXE interrupt enable","TXE interrupt enable","Transmission complete interrupt enable","Transmission complete interrupt enable","RXNE interrupt enable","RXNE interrupt enable","IDLE interrupt enable","IDLE interrupt enable","Transmitter enable","Transmitter enable","Receiver enable","Receiver enable","Receiver wakeup","Receiver wakeup","Send break","Send break","Data register","","Data value","Data value","Baud rate register","","mantissa of USARTDIV","mantissa of USARTDIV","fraction of USARTDIV","fraction of USARTDIV","Status register","","CTS flag","CTS flag","LIN break detection flag","LIN break detection flag","Transmit data register empty","Transmit data register empty","Transmission complete","Transmission complete","Read data register not empty","Read data register not empty","IDLE line detected","IDLE line detected","Overrun error","Overrun error","Noise error flag","Noise error flag","Framing error","Framing error","Parity error","Parity error","Control register 3","","CTS interrupt enable","CTS interrupt enable","CTS enable","CTS enable","RTS enable","RTS enable","DMA enable transmitter","DMA enable transmitter","DMA enable receiver","DMA enable receiver","Smartcard mode enable","Smartcard mode enable","Smartcard NACK enable","Smartcard NACK enable","Half-duplex selection","Half-duplex selection","IrDA low-power","IrDA low-power","IrDA mode enable","IrDA mode enable","Error interrupt enable","Error interrupt enable","Control register 2","","LIN mode enable","LIN mode enable","STOP bits","STOP bits","Clock enable","Clock enable","Clock polarity","Clock polarity","Clock phase","Clock phase","Last bit clock pulse","Last bit clock pulse","LIN break detection interrupt enable","LIN break detection interrupt enable","lin break detection length","lin break detection length","Address of the USART node","Address of the USART node","Guard time and prescaler register","","Guard time value","Guard time value","Prescaler value","Prescaler value","","","","Smartcard mode disabled","Smartcard mode enabled","","","USART prescaler and outputs disabled","USART enabled","","","Half duplex mode is not selected","Half duplex mode is selected","","","USART wakeup on idle line","USART wakeup on address mark","","","Transmitter disabled","Transmitter enabled","","","NACK transmission in case of parity error is disabled","NACK transmission during parity error is enabled","","","1 stop bit","0.5 stop bits","2 stop bits","1.5 stop bits","","","Receiver disabled","Receiver enabled","","","PE interrupt disabled","PE interrupt enabled","","","RXNE interrupt disabled","RXNE interrupt enabled","","","CTS hardware flow control disabled","CTS hardware flow control enabled","","","TC interrupt disabled","TC interrupt enabled","","","Receiver in active mode","Receiver in mute mode","","","Even parity","Odd parity","","","Parity control disabled","Parity control enabled","","","The first clock transition is the first data capture edge","The second clock transition is the first data capture edge","","","No break character is transmitted","Break character transmitted","","","Steady low value on CK pin outside transmission window","Steady high value on CK pin outside transmission window","","","RTS hardware flow control disabled","RTS hardware flow control enabled","","","IDLE interrupt disabled","IDLE interrupt enabled","","","DMA mode is disabled for transmission","DMA mode is enabled for transmission","","","8 data bits","9 data bits","","","DMA mode is disabled for reception","DMA mode is enabled for reception","","","CTS interrupt disabled","CTS interrupt enabled","","","Error interrupt disabled","Error interrupt enabled","","","LIN break detection interrupt disabled","LIN break detection interrupt enabled","","","TXE interrupt disabled","TXE interrupt enabled","","","10-bit break detection","11-bit break detection","","","IrDA disabled","IrDA enabled","","","CK pin disabled","CK pin enabled","","","Normal mode","Low-power mode","","","LIN mode disabled","LIN mode enabled","Universal synchronous asynchronous receiver transmitter","","Status register","Data register","Baud rate register","Control register 1","Control register 2","Control register 3","Guard time and prescaler register","","","","","","","","","","","","","","","","","Port bit set/reset register (GPIOn_BSRR)","","Set bit 0","Set bit 0","Reset bit 0","Reset bit 0","Port bit reset register (GPIOn_BRR)","","Reset bit 0","Reset bit 0","Port input data register (GPIOn_IDR)","","Port input data","Port input data","Port configuration register (GPIOn_CRx)","","Port n configuration bits","Port n configuration bits","Port n mode bits","Port n mode bits","Port output data register (GPIOn_ODR)","","Port output data","Port output data","Port configuration lock register","","Lock key","Lock key","Port A Lock bit 0","Port A Lock bit 0","","","","Analog mode / Push-Pull mode","Floating input (reset state) / Open Drain-Mode","Input with pull-up/pull-down / Alternate Function …","Alternate Function Open-Drain Mode","","","Input is logic high","Input is logic low","","","No action on the corresponding ODx bit","Sets the corresponding ODRx bit","","","Port configuration lock key not active","Port configuration lock key active","","","Port configuration not locked","Port configuration locked","","","Input mode (reset state)","Output mode 10 MHz","Output mode 2 MHz","Output mode 50 MHz","","","Set output to logic high","Set output to logic low","","","No action on the corresponding ODx bit","Reset the ODx bit","General purpose I/O","","Port configuration register low (GPIOn_CRL)","Port input data register (GPIOn_IDR)","Port output data register (GPIOn_ODR)","Port bit set/reset register (GPIOn_BSRR)","Port bit reset register (GPIOn_BRR)","Port configuration lock register","","","","","Input mode (reset state)","General purpose output mode","Alternate function mode","Analog mode","","","Port configuration not locked","Port configuration locked","","","Low speed","Medium speed","High speed","Very high speed","","","Output push-pull (reset state)","Output open-drain","","","Resets the corresponding ODRx bit","","","No pull-up, pull-down","Pull-up","Pull-down","","","Set output to logic high","Set output to logic low","","","Sets the corresponding ODRx bit","","","Port configuration lock key not active","Port configuration lock key active","","","Input is logic high","Input is logic low","","","AF0","AF1","AF2","AF3","AF4","AF5","AF6","AF7","AF8","AF9","AF10","AF11","AF12","AF13","AF14","AF15","","GPIO port configuration lock register","","Port x lock bit y (y= 0..15)","Port x lock bit y (y= 0..15)","Port x lock bit y (y= 0..15)","Port x lock bit y (y= 0..15)","GPIO port bit set/reset register","","Port x set bit y (y= 0..15)","Port x set bit y (y= 0..15)","Port x set bit y (y= 0..15)","Port x set bit y (y= 0..15)","GPIO port mode register","","Port x configuration bits (y = 0..15)","Port x configuration bits (y = 0..15)","GPIO port input data register","","Port input data (y = 0..15)","Port input data (y = 0..15)","GPIO port output type register","","Port x configuration bits (y = 0..15)","Port x configuration bits (y = 0..15)","GPIO port output data register","","Port output data (y = 0..15)","Port output data (y = 0..15)","GPIO port pull-up/pull-down register","","Port x configuration bits (y = 0..15)","Port x configuration bits (y = 0..15)","GPIO alternate function register","","Alternate function selection for port x bit y (y = 0..15)","Alternate function selection for port x bit y (y = 0..15)","GPIO port output speed register","","Port x configuration bits (y = 0..15)","Port x configuration bits (y = 0..15)","General-purpose I/Os","","GPIO port mode register","GPIO port output type register","GPIO port output speed register","GPIO port pull-up/pull-down register","GPIO port input data register","GPIO port output data register","GPIO port bit set/reset register","GPIO port configuration lock register","GPIO alternate function register (low, highi":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,0,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,0,0,8,8,8,0,9,9,9,0,10,10,10,0,11,11,11,0,12,12,12,0,13,13,13,0,14,14,14,14,14,0,15,15,15,0,16,16,16,0,17,17,17,0,18,18,18,0,19,19,19,0,20,20,20,0,21,21,21,0,22,22,22,0,23,23,23,0,24,24,24,0,25,25,25,0,26,26,26,0,27,27,27,0,28,28,28,0,29,29,29,0,30,30,30,0,31,31,31,0,32,32,32,0,33,33,33,0,34,34,34,0,35,35,35,0,36,36,36,0,37,37,37,0,38,38,38,0,39,39,39,0,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,41,41,41,41,41,41,0,0,0,42,42,42,42,42,0,43,43,43,0,44,44,44,0,45,45,45,45,45,0,46,46,46,0,47,47,47,47,47,0,0,48,48,48,48,48,0,49,49,49,0,50,50,50,0,51,51,51,0,52,52,52,0,53,53,53,53,53,0,54,54,54,0,55,55,55,0,56,56,56,56,56,56,56,0,0,0,57,57,57,57,57,0,58,58,58,0,59,59,59,59,59,0,60,60,60,0,61,61,0,62,62,62,62,0,63,63,63,0,64,64,0,65,65,65,0,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,68,68,68,68,68,0,69,69,69,69,69,0,70,70,70,0,71,71,71,0,72,72,72,0,73,73,73,0,74,74,74,0,75,75,75,0,76,76,76,0,77,77,77,77,77,77,77,77,77,77,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,78,78,78,78,78,78,78,79,79,79,79,79,79,79,80,80,80,80,80,80,80,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,57,57,57,57,57,57,57,58,58,58,58,58,58,58,59,59,59,59,59,59,59,60,60,60,60,60,60,60,61,61,61,61,61,61,61,62,62,62,62,62,62,62,63,63,63,63,63,63,63,64,64,64,64,64,64,64,65,65,65,65,65,65,65,66,66,66,66,66,66,66,67,67,67,67,67,67,67,68,68,68,68,68,68,68,69,69,69,69,69,69,69,70,70,70,70,70,70,70,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,74,74,74,74,74,74,74,75,75,75,75,75,75,75,76,76,76,76,76,76,76,77,77,77,77,77,77,77,40,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,78,79,80,41,56,42,43,44,45,46,47,48,49,50,51,52,53,54,55,77,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,2,3,4,5,6,7,42,43,44,45,46,47,68,69,70,71,72,73,74,75,76],"f":[null,null,null,null,[[],["ue",3]],[[["ue",3]]],[[],["m",3]],[[["m",3]]],[[],["wake",3]],[[["wake",3]]],[[],["pce",3]],[[["pce",3]]],[[],["ps",3]],[[["ps",3]]],[[],["peie",3]],[[["peie",3]]],[[],["txeie",3]],[[["txeie",3]]],[[],["tcie",3]],[[["tcie",3]]],[[],["rxneie",3]],[[["rxneie",3]]],[[],["idleie",3]],[[["idleie",3]]],[[],["te",3]],[[["te",3]]],[[],["re",3]],[[["re",3]]],[[],["rwu",3]],[[["rwu",3]]],[[],["sbk",3]],[[["sbk",3]]],null,null,[[],["u16",15]],[[["u16",15]]],null,null,[[],["u16",15]],[[["u16",15]]],[[],["u8",15]],[[["u8",15]]],null,null,[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],[[],["bool",15]],[[["bool",15]]],null,null,[[],["ctsie",3]],[[["ctsie",3]]],[[],["ctse",3]],[[["ctse",3]]],[[],["rtse",3]],[[["rtse",3]]],[[],["dmat",3]],[[["dmat",3]]],[[],["dmar",3]],[[["dmar",3]]],[[],["scen",3]],[[["scen",3]]],[[],["nack",3]],[[["nack",3]]],[[],["hdsel",3]],[[["hdsel",3]]],[[],["irlp",3]],[[["irlp",3]]],[[],["iren",3]],[[["iren",3]]],[[],["eie",3]],[[["eie",3]]],null,null,[[],["linen",3]],[[["linen",3]]],[[],["stop",3]],[[["stop",3]]],[[],["clken",3]],[[["clken",3]]],[[],["cpol",3]],[[["cpol",3]]],[[],["cpha",3]],[[["cpha",3]]],[[],["bool",15]],[[["bool",15]]],[[],["lbdie",3]],[[["lbdie",3]]],[[],["lbdl",3]],[[["lbdl",3]]],[[],["u8",15]],[[["u8",15]]],null,null,[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["sr",3],["rw",3],["reg",3]]],[[],[["dr",3],["rw",3],["reg",3]]],[[],[["brr",3],["rw",3],["reg",3]]],[[],[["rw",3],["reg",3],["cr1",3]]],[[],[["rw",3],["reg",3],["cr2",3]]],[[],[["rw",3],["reg",3],["cr3",3]]],[[],[["rw",3],["reg",3],["gtpr",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],null,null,[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],null,null,[[["usize",15]],["idr",3]],[[["usize",15],["idr",3]]],null,null,[[["usize",15]],["cnf",3]],[[["usize",15],["cnf",3]]],[[["usize",15]],["mode",3]],[[["usize",15],["mode",3]]],null,null,[[["usize",15]],["odr",3]],[[["usize",15],["odr",3]]],null,null,[[],["lckk",3]],[[["lckk",3]]],[[["usize",15]],["lck",3]],[[["usize",15],["lck",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],[["rw",3],["reg",3],["cr",3]]],[[],[["r",3],["reg",3],["idr",3]]],[[],[["reg",3],["rw",3],["odr",3]]],[[],[["bsrr",3],["reg",3],["w",3]]],[[],[["reg",3],["w",3],["brr",3]]],[[],[["lckr",3],["rw",3],["reg",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["lckk",3]],[[["lckk",3]]],[[["usize",15]],["lck",3]],[[["usize",15],["lck",3]]],null,null,[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],null,null,[[["usize",15]],["moder",3]],[[["usize",15],["moder",3]]],null,null,[[["usize",15]],["idr",3]],[[["usize",15],["idr",3]]],null,null,[[["usize",15]],["ot",3]],[[["usize",15],["ot",3]]],null,null,[[["usize",15]],["odr",3]],[[["usize",15],["odr",3]]],null,null,[[["usize",15]],["pupdr",3]],[[["usize",15],["pupdr",3]]],null,null,[[["usize",15]],["afr",3]],[[["usize",15],["afr",3]]],null,null,[[["usize",15]],["ospeedr",3]],[[["usize",15],["ospeedr",3]]],null,null,[[],[["rw",3],["reg",3],["moder",3]]],[[],[["otyper",3],["rw",3],["reg",3]]],[[],[["reg",3],["rw",3],["ospeedr",3]]],[[],[["reg",3],["rw",3],["pupdr",3]]],[[],[["reg",3],["r",3],["idr",3]]],[[],[["reg",3],["rw",3],["odr",3]]],[[],[["reg",3],["bsrr",3],["w",3]]],[[],[["lckr",3],["reg",3],["rw",3]]],[[["usize",15]],[["reg",3],["rw",3],["afr",3]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["usart1",3]],[[],["cr1",3]],[[],["dr",3]],[[],["brr",3]],[[],["sr",3]],[[],["cr3",3]],[[],["cr2",3]],[[],["gtpr",3]],[[],["scen",3]],[[],["ue",3]],[[],["hdsel",3]],[[],["wake",3]],[[],["te",3]],[[],["nack",3]],[[],["stop",3]],[[],["re",3]],[[],["peie",3]],[[],["rxneie",3]],[[],["ctse",3]],[[],["tcie",3]],[[],["rwu",3]],[[],["ps",3]],[[],["pce",3]],[[],["cpha",3]],[[],["sbk",3]],[[],["cpol",3]],[[],["rtse",3]],[[],["idleie",3]],[[],["dmat",3]],[[],["m",3]],[[],["dmar",3]],[[],["ctsie",3]],[[],["eie",3]],[[],["lbdie",3]],[[],["txeie",3]],[[],["lbdl",3]],[[],["iren",3]],[[],["clken",3]],[[],["irlp",3]],[[],["linen",3]],[[],["rw",3]],[[],["r",3]],[[],["w",3]],[[],["reg",3]],[[],["gpioa",3]],[[],["bsrr",3]],[[],["brr",3]],[[],["idr",3]],[[],["cr",3]],[[],["odr",3]],[[],["lckr",3]],[[],["cnf",3]],[[],["idr",3]],[[],["bsw",3]],[[],["lckk",3]],[[],["lck",3]],[[],["mode",3]],[[],["odr",3]],[[],["brw",3]],[[],["gpio",3]],[[],["moder",3]],[[],["lck",3]],[[],["ospeedr",3]],[[],["ot",3]],[[],["brw",3]],[[],["pupdr",3]],[[],["odr",3]],[[],["bsw",3]],[[],["lckk",3]],[[],["idr",3]],[[],["afr",3]],[[],["lckr",3]],[[],["bsrr",3]],[[],["moder",3]],[[],["idr",3]],[[],["otyper",3]],[[],["odr",3]],[[],["pupdr",3]],[[],["afr",3]],[[],["ospeedr",3]],[[],["cr1",3]],[[],["dr",3]],[[],["brr",3]],[[],["sr",3]],[[],["cr3",3]],[[],["cr2",3]],[[],["gtpr",3]],[[],["bsrr",3]],[[],["brr",3]],[[],["idr",3]],[[],["cr",3]],[[],["odr",3]],[[],["lckr",3]],[[],["lckr",3]],[[],["bsrr",3]],[[],["moder",3]],[[],["idr",3]],[[],["otyper",3]],[[],["odr",3]],[[],["pupdr",3]],[[],["afr",3]],[[],["ospeedr",3]]],"p":[[3,"Cr1"],[3,"Dr"],[3,"Brr"],[3,"Sr"],[3,"Cr3"],[3,"Cr2"],[3,"Gtpr"],[3,"Scen"],[3,"Ue"],[3,"Hdsel"],[3,"Wake"],[3,"Te"],[3,"Nack"],[3,"Stop"],[3,"Re"],[3,"Peie"],[3,"Rxneie"],[3,"Ctse"],[3,"Tcie"],[3,"Rwu"],[3,"Ps"],[3,"Pce"],[3,"Cpha"],[3,"Sbk"],[3,"Cpol"],[3,"Rtse"],[3,"Idleie"],[3,"Dmat"],[3,"M"],[3,"Dmar"],[3,"Ctsie"],[3,"Eie"],[3,"Lbdie"],[3,"Txeie"],[3,"Lbdl"],[3,"Iren"],[3,"Clken"],[3,"Irlp"],[3,"Linen"],[3,"Usart1"],[3,"Reg"],[3,"Bsrr"],[3,"Brr"],[3,"Idr"],[3,"Cr"],[3,"Odr"],[3,"Lckr"],[3,"Cnf"],[3,"Idr"],[3,"Bsw"],[3,"Lckk"],[3,"Lck"],[3,"Mode"],[3,"Odr"],[3,"Brw"],[3,"Gpioa"],[3,"Moder"],[3,"Lck"],[3,"Ospeedr"],[3,"Ot"],[3,"Brw"],[3,"Pupdr"],[3,"Odr"],[3,"Bsw"],[3,"Lckk"],[3,"Idr"],[3,"Afr"],[3,"Lckr"],[3,"Bsrr"],[3,"Moder"],[3,"Idr"],[3,"Otyper"],[3,"Odr"],[3,"Pupdr"],[3,"Afr"],[3,"Ospeedr"],[3,"Gpio"],[3,"RW"],[3,"R"],[3,"W"]]},\
"vcell":{"doc":"Just like <code>Cell</code> but with volatile read / write operations","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["VolatileCell","new","get","set","as_ptr","borrow","borrow_mut","try_from","from","into","try_into","type_id"],"q":["vcell","","","","","","","","","","",""],"d":["Just like <code>Cell</code> but with volatile read / write operations","Creates a new <code>VolatileCell</code> containing the given value","Returns a copy of the contained value","Sets the contained value","Returns a raw pointer to the underlying data in the cell","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"Void","t":[4,5,8,10,8,10,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Void","unreachable","ResultVoidExt","void_unwrap","ResultVoidErrExt","void_unwrap_err","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","eq","partial_cmp","clone"],"q":["void","","","","","","","","","","","","","","","","",""],"d":["The empty type for cases which can’t occur.","A safe version of <code>intrinsincs::unreachable</code>.","Extensions to <code>Result<T, Void></code>","Get the value out of a wrapper.","Extensions to <code>Result<Void, E></code>","Get the error out of a wrapper.","","","","","","","","","","","",""],"i":[0,0,0,1,0,2,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,[[["void",4]]],null,[[]],null,[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bool",15]],[[],[["ordering",4],["option",4]]],[[],["void",4]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","t":[3,11,3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RO","read","RW","modify","read","write","WO","write","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id"],"q":["volatile_register","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Read-Only register","Reads the value of the register","Read-Write register","Performs a read-modify-write operation","Reads the value of the register","Writes a <code>value</code> into the register","Write-Only register","Writes <code>value</code> into the register","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,2,2,2,0,3,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3],"f":[null,[[]],null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
initSearch(searchIndex);